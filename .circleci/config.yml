version: 2.1

orbs:
  node: circleci/node@5.0.2

parameters:
  tooling-dependencies-cache-version:
    type: string
    default: tooling-v1
  functions-dependencies-cache-version:
    type: string
    default: functions-v1
  ui-dependencies-cache-version:
    type: string
    default: ui-v1

executors:
  default:
    docker:
      - image: cimg/node:18.19.0
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: google_application_credentials.json

commands:
  install-dependency-as-global-package:
    parameters:
      package-name:
        type: string
    steps:
      - run:
          name: Install << parameters.package-name >>
          command: |
            mkdir .npm-global && npm config set prefix '.npm-global' && \
            npm install --global \
              << parameters.package-name >>@$(node --print --eval='require("./package-lock.json").packages["node_modules/<< parameters.package-name >>"].version') \
  setup-firebase-auth:
    parameters:
      firebase-project:
        type: string
        default: default
    steps:
      - run:
          name: Set up Firebase authentication
          environment:
            FIREBASE_PROJECT: << parameters.firebase-project >>
          command: |
            echo Using Firebase project: ${FIREBASE_PROJECT}
            SERVICE_ACCOUNT_KEY_VAR=SERVICE_ACCOUNT_KEY_${FIREBASE_PROJECT^^}
            echo Reading service account key from environment variable: ${SERVICE_ACCOUNT_KEY_VAR}
            if [ -z "${!SERVICE_ACCOUNT_KEY_VAR}" ]
            then
              echo Environment variable ${SERVICE_ACCOUNT_KEY_VAR} is empty!
              exit 1
            fi
            echo ${!SERVICE_ACCOUNT_KEY_VAR} > ${GOOGLE_APPLICATION_CREDENTIALS}
            echo Service account key written to ${GOOGLE_APPLICATION_CREDENTIALS}

jobs:
  validate-functions-config:
    parameters:
      firebase-project:
        type: string
        default: default
    executor: default
    steps:
      - checkout
      - setup-firebase-auth:
          firebase-project: << parameters.firebase-project >>
      - install-dependency-as-global-package:
          package-name: firebase-tools
      - run: firebase --project=<< parameters.firebase-project >> functions:config:get > config.json
      - run: npx typescript-json-schema@0.50.0 --required --noExtraProps --out config-schema.json functions/src/config.ts Config
      - run: npx --package ajv-cli ajv validate -s config-schema.json -d config.json

  check-config:
    parameters:
      firebase-project:
        type: string
        default: default
    executor: default
    steps:
      - checkout
      - setup-firebase-auth:
          firebase-project: << parameters.firebase-project >>
      - install-dependency-as-global-package:
          package-name: firebase-tools
      - run: firebase --project=<< parameters.firebase-project >> functions:config:get > ./deployment/check-config/config.json
      - run: npm run config:check ./config.json

  check-formatting:
    executor: default
    steps:
      - checkout
      - install-dependency-as-global-package:
          package-name: prettier
      - run: npm run prettier:check

  deploy-firebase-app:
    parameters:
      firebase-project:
        type: string
        default: default
      ui-build-config:
        type: string
        default: ""
    executor: default
    environment:
      HUMEUR_DU_MOIS_UI_FIREBASE_CONFIG: << parameters.ui-build-config >>
    steps:
      - checkout
      - setup-firebase-auth:
          firebase-project: << parameters.firebase-project >>
      - node/install-packages:
          cache-version: << pipeline.parameters.tooling-dependencies-cache-version >>
      - node/install-packages:
          app-dir: functions
          cache-version: << pipeline.parameters.functions-dependencies-cache-version >>
      - node/install-packages:
          app-dir: ui
          cache-version: << pipeline.parameters.ui-dependencies-cache-version >>
      - run: npx firebase deploy --project=<< parameters.firebase-project >> --non-interactive --force

workflows:
  version: 2

  build-and-deploy:
    jobs:
      - node/run:
          name: build-ui
          app-dir: ui
          cache-version: << pipeline.parameters.ui-dependencies-cache-version >>
          npm-run: build
          filters: &filters-always
            tags:
              only: /.*/
      - node/run:
          name: build-ui-for-production
          app-dir: ui
          cache-version: << pipeline.parameters.ui-dependencies-cache-version >>
          npm-run: build:prod
          filters: *filters-always

      - node/run:
          name: build-functions
          app-dir: functions
          cache-version: << pipeline.parameters.functions-dependencies-cache-version >>
          npm-run: build
          filters: *filters-always
      - node/test:
          name: test-functions
          app-dir: functions
          cache-version: << pipeline.parameters.functions-dependencies-cache-version >>
          filters: *filters-always

      - node/test:
          name: test-tooling
          cache-version: << pipeline.parameters.tooling-dependencies-cache-version >>
          filters: *filters-always
      - check-formatting:
          filters: *filters-always

      - validate-functions-config
      - deploy-firebase-app:
          requires:
            - build-ui
            - build-ui-for-production
            - build-functions
            - validate-functions-config
          filters: &filters-only-main
            branches:
              only:
                - main

      - validate-functions-config:
          name: prod-validate-functions-config
          firebase-project: prod
          filters: &filters-only-prod-tag
            branches:
              ignore: /.*/
            tags:
              only: /^v.+-prod.*/
      - check-config:
          name: prod-check-config
          firebase-project: prod
          requires:
            - test-tooling
          filters: *filters-only-prod-tag
      - deploy-firebase-app:
          name: prod-deploy-firebase-app
          firebase-project: prod
          ui-build-config: |
            {
              "apiKey": "AIzaSyBYU6kv-jxkDE6Ade29kBnEAoW9ZN_yfpc",
              "authDomain": "humeur-du-mois-2018-prod.firebaseapp.com",
              "databaseURL": "https://humeur-du-mois-2018-prod.firebaseio.com",
              "projectId": "humeur-du-mois-2018-prod",
              "storageBucket": "humeur-du-mois-2018-prod.appspot.com",
              "messagingSenderId": "777759273294",
              "appId": "1:777759273294:web:4bea510be52fdd6317ee1f"
            }
          requires:
            - build-ui
            - build-ui-for-production
            - build-functions
            - prod-validate-functions-config
            - prod-check-config
          filters: *filters-only-prod-tag
