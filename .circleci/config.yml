version: 2

jobs:
  install-ui-dependencies:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - ui-dependencies-{{ checksum "ui/package-lock.json" }}
            - ui-dependencies-
      - run:
          name: Download UI dependencies
          command: npm --prefix ui ci
      - save_cache:
          paths:
            - ui/node_modules
          key: ui-dependencies-{{ checksum "ui/package-lock.json" }}
      - persist_to_workspace:
          root: ./
          paths:
            - ui/node_modules

  build-ui:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: npm --prefix ui run build

  build-ui-for-production:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: npm --prefix ui run build:prod

  install-functions-dependencies:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - functions-dependencies-{{ checksum "functions/package-lock.json" }}
            - functions-dependencies-
      - run:
          name: Download functions dependencies
          command: npm --prefix functions ci
      - save_cache:
          paths:
            - functions/node_modules
          key: functions-dependencies-{{ checksum "functions/package-lock.json" }}
      - persist_to_workspace:
          root: ./
          paths:
            - functions/node_modules

  lint-functions:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: npm --prefix functions run lint

  build-functions:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: npm --prefix functions run build

  install-tooling-dependencies:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - tooling-dependencies-{{ checksum "package-lock.json" }}
            - tooling-dependencies-
      - run: npm ci
      - save_cache:
          paths:
            - node_modules
          key: tooling-dependencies-{{ checksum "package-lock.json" }}
      - persist_to_workspace:
          root: ./
          paths:
            - node_modules

  validate-functions-config:
    environment:
      FIREBASE_PROJECT: default
    docker: &validate-functions-config-docker
      - image: circleci/node:10
    steps: &validate-functions-config-steps
      - checkout
      - attach_workspace:
          at: ./
      - run: node_modules/.bin/firebase --project=$FIREBASE_PROJECT --token=$FIREBASE_TOKEN functions:config:get > config.json
      - run: npx typescript-json-schema --required --noExtraProps --out config-schema.json functions/src/config.ts Config
      - run: npx --package ajv-cli ajv validate -s config-schema.json -d config.json

  prod-check-config:
    environment:
      FIREBASE_PROJECT: prod
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: node_modules/.bin/firebase --project=$FIREBASE_PROJECT --token=$FIREBASE_TOKEN functions:config:get > ./deployment/check-config/config.json
      - run: npm run config:check ./config.json

  test-tooling:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run: npm run test

  check-formatting:
    docker:
      - image: circleci/node:12 # prettier does not support 8 anymore
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npm run prettier:check

  prod-validate-functions-config:
    environment:
      FIREBASE_PROJECT: prod
    docker: *validate-functions-config-docker
    steps: *validate-functions-config-steps

  deploy-firebase-app:
    environment:
      FIREBASE_PROJECT: default
    docker: &deploy-firebase-app-docker
      - image: circleci/node:10
    steps: &deploy-firebase-app-steps
      - checkout
      - attach_workspace:
          at: ./
      - run: node_modules/.bin/firebase deploy --project=$FIREBASE_PROJECT --token=$FIREBASE_TOKEN --non-interactive

  prod-deploy-firebase-app:
    environment:
      FIREBASE_PROJECT: prod
    docker: *deploy-firebase-app-docker
    steps: *deploy-firebase-app-steps

workflows:
  version: 2

  build-and-deploy:
    jobs:
      - install-ui-dependencies:
          filters:
            tags:
              only: /.*/
      - build-ui:
          requires:
            - install-ui-dependencies
          filters:
            tags:
              only: /.*/
      - build-ui-for-production:
          requires:
            - install-ui-dependencies
          filters:
            tags:
              only: /.*/

      - install-functions-dependencies:
          filters:
            tags:
              only: /.*/
      - lint-functions:
          requires:
            - install-functions-dependencies
          filters:
            tags:
              only: /.*/
      - build-functions:
          requires:
            - install-functions-dependencies
          filters:
            tags:
              only: /.*/

      - install-tooling-dependencies:
          filters:
            tags:
              only: /.*/
      - check-formatting:
          requires:
            - install-tooling-dependencies
          filters:
            tags:
              only: /^v.*/
      - validate-functions-config:
          context: firebase-deploy-zenika
          requires: &validate-functions-config-requires
            - install-tooling-dependencies
      - deploy-firebase-app:
          context: firebase-deploy-zenika
          requires:
            - install-tooling-dependencies
            - build-ui
            - build-ui-for-production
            - lint-functions
            - build-functions
            - validate-functions-config
          filters:
            branches:
              only:
                - master
      - test-tooling:
          requires:
            - install-tooling-dependencies
          filters:
            tags:
              only: /.*/
      - prod-validate-functions-config:
          context: firebase-deploy-zenika
          requires: *validate-functions-config-requires
          filters: &filters-for-prod
            branches:
              ignore: /.*/
            tags:
              only: /^v.+-prod.*/
      - prod-check-config:
          context: firebase-deploy-zenika
          requires:
            - test-tooling
          filters: *filters-for-prod
      - prod-deploy-firebase-app:
          context: firebase-deploy-zenika
          requires:
            - install-tooling-dependencies
            - build-ui
            - build-ui-for-production
            - lint-functions
            - prod-validate-functions-config
            - build-functions
          filters: *filters-for-prod
